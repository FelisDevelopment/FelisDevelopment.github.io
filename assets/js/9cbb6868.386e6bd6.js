"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[535],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return p}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(t),p=a,f=m["".concat(s,".").concat(p)]||m[p]||d[p]||i;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8215:function(e,n,t){t.d(n,{Z:function(){return a}});var r=t(7294);function a(e){var n=e.children,t=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return u}});var r=t(7462),a=t(7294),i=t(2389),o=t(7556),l=t(6010),s="tabItem_LplD";function c(e){var n,t,i,c=e.lazy,u=e.block,d=e.defaultValue,m=e.values,p=e.groupId,f=e.className,g=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=m?m:g.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),v=(0,o.lx)(b,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===d?d:null!=(n=null!=d?d:null==(t=g.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(i=g[0])?void 0:i.props.value;if(null!==y&&!b.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var h=(0,o.UB)(),_=h.tabGroupChoices,w=h.setTabGroupChoices,k=(0,a.useState)(y),x=k[0],N=k[1],O=[],C=(0,o.o5)().blockElementScrollPositionUntilNextRender;if(null!=p){var T=_[p];null!=T&&T!==x&&b.some((function(e){return e.value===T}))&&N(T)}var E=function(e){var n=e.currentTarget,t=O.indexOf(n),r=b[t].value;r!==x&&(C(n),N(r),null!=p&&w(p,r))},j=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=O.indexOf(e.currentTarget)+1;t=O[r]||O[0];break;case"ArrowLeft":var a=O.indexOf(e.currentTarget)-1;t=O[a]||O[O.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":u},f)},b.map((function(e){var n=e.value,t=e.label,i=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:x===n?0:-1,"aria-selected":x===n,key:n,ref:function(e){return O.push(e)},onKeyDown:j,onFocus:E,onClick:E},i,{className:(0,l.Z)("tabs__item",s,null==i?void 0:i.className,{"tabs__item--active":x===n})}),null!=t?t:n)}))),c?(0,a.cloneElement)(g.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},g.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==x})}))))}function u(e){var n=(0,i.Z)();return a.createElement(c,(0,r.Z)({key:String(n)},e))}},4899:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return p}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=t(9877),l=t(8215),s=["components"],c={title:"Config"},u=void 0,d={unversionedId:"storage/config",id:"storage/config",title:"Config",description:"Config",source:"@site/docs/storage/config.md",sourceDirName:"storage",slug:"/storage/config",permalink:"/docs/storage/config",editUrl:"https://github.com/FelisDevelopment/FelisDevelopment.github.io/tree/main/docs/storage/config.md",tags:[],version:"current",frontMatter:{title:"Config"},sidebar:"docs",previous:{title:"Documentation",permalink:"/docs/"},next:{title:"Installation",permalink:"/docs/storage/"}},m={},p=[{value:"Config",id:"config",level:2},{value:"New crate",id:"new-crate",level:2},{value:"fd_storage config",id:"fd_storage-config",level:3},{value:"Inventory item",id:"inventory-item",level:3}],f={toc:p};function g(e){var n=e.components,t=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"config"},"Config"),(0,i.kt)("p",null,"To find out more about configuration please check descriptions below"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'Config =  {\n    debug = true, -- Enables or Disables prints in server console\n    purge_expired_every = 1000 * 60 * 10, -- 10 minutes, defines intervals for expired containers checking and removing\n    save_storages_every = 1000 * 60 * 10, -- 10 minutes, defines intervals when on the ground inventories are saved\n    hacking = {\n        icons = 3, -- how many icons appears in hacking\n        time = 5000 -- how much time user has to guess correct color\n    },\n    core = {\n        framework = \'qbcore\', -- available: qbcore, esx\n        resource = \'reign-core\' -- for qbcore usually: qb-core, for esx usually: es_extended\n    },\n    animations = { -- different animations for actions\n        destroy = {\n            dict = \'anim@amb@clubhouse@tutorial@bkr_tut_ig3@\',\n            name = \'machinic_loop_mechandplayer\',\n        },\n        repair = {\n            dict = \'anim@amb@clubhouse@tutorial@bkr_tut_ig3@\',\n            name = \'machinic_loop_mechandplayer\',\n        },\n        create = {\n            dict = "random@domestic",\n            name = "pickup_low"\n        },\n        lock = {\n            dict = \'anim@amb@clubhouse@tutorial@bkr_tut_ig3@\',\n            name = \'machinic_loop_mechandplayer\',\n        },\n        unlock = {\n            dict = \'anim@amb@clubhouse@tutorial@bkr_tut_ig3@\',\n            name = \'machinic_loop_mechandplayer\',\n        }\n    },\n    crates = { -- defines all containers which are available\n        smallcrate = {\n            lifetime = 14 * 86400, -- 7 days, defines container age after which it will be despawned and destroyed (seconds)\n            model = "gr_prop_gr_rsply_crate03a", -- container model\n            can_pickup = true, -- can container be picked up\n            destroy_time = 30000, -- how many time it takes to destroy container\n            lock_time = 30000, -- how many time it takes to put a lock on container\n            break_time = 30000, -- how many time it takes for hack to appear\n            repair_time = 30000, -- how many time it takes to repair / extend lifetime\n            distance = 2, -- target distance\n            repair_kits_needed = 1, -- how many repair kits needed to repair / extend lifetime\n            size = {\n                slots = 15, -- how many slots are available for this container\n                weight = 50000 -- maximum weight available for this container\n            }\n        },\n        mediumcrate = {\n            lifetime = 14 * 86400, -- 14 days\n            model = "prop_box_wood07a",\n            destroy_time = 60000,\n            lock_time = 30000,\n            break_time = 30000,\n            repair_time = 30000,\n            distance = 2,\n            repair_kits_needed = 2,\n            size = {\n                slots = 30,\n                weight = 100000\n            }\n        },\n        bigcrate = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "prop_box_wood04a",\n            destroy_time = 90000,\n            lock_time = 30000,\n            break_time = 30000,\n            repair_time = 30000,\n            distance = 2,\n            repair_kits_needed = 3,\n            size = {\n                slots = 50,\n                weight = 200000\n            }\n        },\n        smallcontainer = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "prop_container_05mb",\n            destroy_time = 120000,\n            lock_time = 30000,\n            break_time = 30000,\n            repair_time = 30000,\n            distance = 3,\n            repair_kits_needed = 4,\n            size = {\n                slots = 100,\n                weight = 500000\n            }\n        },\n        mediumcontainer = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "prop_container_03mb",\n            destroy_time = 120000,\n            lock_time = 30000,\n            break_time = 30000,\n            repair_time = 30000,\n            distance = 5,\n            repair_kits_needed = 5,\n            size = {\n                slots = 200,\n                weight = 1000000\n            }\n        },\n        bigcontainer = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "prop_container_01mb",\n            destroy_time = 120000,\n            lock_time = 30000,\n            break_time = 30000,\n            repair_time = 30000,\n            distance = 7,\n            repair_kits_needed = 6,\n            size = {\n                slots = 400,\n                weight = 1500000\n            }\n        },\n        smalltrapcrate = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "gr_prop_gr_rsply_crate03a",\n            destroy_time = 30000,\n            distance = 3,\n            trap = true\n        },\n        trapcrate = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "prop_box_wood07a",\n            destroy_time = 30000,\n            distance = 3,\n            trap = true\n        },\n        bigtrapcrate = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "prop_box_wood04a",\n            destroy_time = 30000,\n            distance = 3,\n            trap = true\n        },\n        portablefridge = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "v_res_tre_fridge",\n            destroy_time = 30000,\n            distance = 3,\n            offset = 0.0,\n            size = {\n                slots = 20,\n                weight = 70000\n            }\n        }\n    }\n}\n\n')),(0,i.kt)("h2",{id:"new-crate"},"New crate"),(0,i.kt)("p",null,"Since script is dynamic, you can add new containers at any time."),(0,i.kt)("h3",{id:"fd_storage-config"},"fd_storage config"),(0,i.kt)("p",null,"First of all, add container to config ",(0,i.kt)("inlineCode",{parentName:"p"},"shared/config.lua"),", please refer to example down below. It will be named ",(0,i.kt)("inlineCode",{parentName:"p"},"newawesomecontainer")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'Config =  {\n    ...,\n    crates = {\n        ...,\n        newawesomecontainer = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "v_res_tre_fridge",\n            destroy_time = 30000,\n            distance = 3,\n            offset = 0.0,\n            size = {\n                slots = 20,\n                weight = 70000\n            }\n        }\n    }\n}\n')),(0,i.kt)("h3",{id:"inventory-item"},"Inventory item"),(0,i.kt)("p",null,"After adding container to config, you'll need to add item to your inventory."),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"qbcore",label:"QBCore",default:!0,mdxType:"TabItem"},(0,i.kt)("p",null,"Add item to ",(0,i.kt)("inlineCode",{parentName:"p"},"shared/items.lua")," or where your ",(0,i.kt)("inlineCode",{parentName:"p"},"QBShared.Items")," is."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'    ["newawesomecontainer"] = {\n        ["name"] = "newawesomecontainer",\n        ["label"] = "New Awesome Container",\n        ["weight"] = 0,\n        ["type"] = "item",\n        ["image"] = "newawesomecontainer.png",\n        ["unique"] = true,\n        ["useable"] = true,\n        ["shouldClose"] = true,\n        ["combinable"] = nil,\n        ["description"] = "Is there something in it? It\'s new."\n    },\n'))),(0,i.kt)(l.Z,{value:"esx",label:"ESX",default:!0,mdxType:"TabItem"},(0,i.kt)("p",null,"Add item to ",(0,i.kt)("inlineCode",{parentName:"p"},"ox_inventory/data/items.lua"),";"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"    ['newawesomecontainer'] = {\n        label = 'New Awesome Container',\n        weight = 1,\n        stack = false,\n        close = true,\n        description = 'Is there something in it?',\n        client = {\n            usetime = 2500,\n            export = 'fd_storage.newawesomecontainer'\n        },\n        server = {\n            export = 'fd_storage.newawesomecontainer'\n        }\n    },\n")))))}g.isMDXComponent=!0}}]);