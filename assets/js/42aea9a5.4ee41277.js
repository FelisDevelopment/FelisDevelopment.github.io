"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3531],{3905:function(e,n,a){a.d(n,{Zo:function(){return s},kt:function(){return g}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function c(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),u=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},s=function(e){var n=u(e.components);return t.createElement(l.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(a),d=r,g=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return a?t.createElement(g,i(i({ref:n},s),{},{components:a})):t.createElement(g,i({ref:n},s))}));function g(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[p]="string"==typeof e?e:r,i[1]=c;for(var u=2;u<o;u++)i[u]=a[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5691:function(e,n,a){a.r(n),a.d(n,{assets:function(){return l},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u}});var t=a(3117),r=(a(7294),a(3905));const o={title:"Exports"},i=void 0,c={unversionedId:"fd_banking/exports",id:"fd_banking/exports",title:"Exports",description:"Please very carefully read exports provided below.",source:"@site/docs/fd_banking/exports.md",sourceDirName:"fd_banking",slug:"/fd_banking/exports",permalink:"/docs/fd_banking/exports",draft:!1,editUrl:"https://github.com/FelisDevelopment/FelisDevelopment.github.io/tree/main/docs/fd_banking/exports.md",tags:[],version:"current",frontMatter:{title:"Exports"},sidebar:"fd_banking",previous:{title:"Config",permalink:"/docs/fd_banking/config"},next:{title:"Installation",permalink:"/docs/fd_banking/"}},l={},u=[{value:"Debug",id:"debug",level:2},{value:"Get personal account",id:"get-personal-account",level:3},{value:"Get Account by ID",id:"get-account-by-id",level:3},{value:"Get Account by IBAN",id:"get-account-by-iban",level:3},{value:"Get Business account",id:"get-business-account",level:3},{value:"Issue invoice",id:"issue-invoice",level:3},{value:"Pay invoice",id:"pay-invoice",level:3},{value:"Lookup invoice",id:"lookup-invoice",level:3},{value:"Cancel invoice",id:"cancel-invoice",level:3},{value:"Get account owner",id:"get-account-owner",level:3},{value:"Get member",id:"get-member",level:3},{value:"Get account members",id:"get-account-members",level:3},{value:"Do transfer",id:"do-transfer",level:3},{value:"Open bank",id:"open-bank",level:3},{value:"Open atm",id:"open-atm",level:3},{value:"Open billing",id:"open-billing",level:3},{value:"Qb-management equivalent exports",id:"qb-management-equivalent-exports",level:2},{value:"Get Society Account",id:"get-society-account",level:3},{value:"Get Gang Account",id:"get-gang-account",level:3},{value:"Add Society Money",id:"add-society-money",level:3},{value:"Add Gang Money",id:"add-gang-money",level:3},{value:"Remove Society Money",id:"remove-society-money",level:3},{value:"Remove Gang Money",id:"remove-gang-money",level:3}],s={toc:u},p="wrapper";function m(e){let{components:n,...a}=e;return(0,r.kt)(p,(0,t.Z)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Attention",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Please very carefully read exports provided below.")),(0,r.kt)("h2",{id:"debug"},"Debug"),(0,r.kt)("h3",{id:"get-personal-account"},"Get personal account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param identifier<string> - Identifier (citizen id)\nexports.fd_banking:getPersonalAccount(identifier)\n")),(0,r.kt)("h3",{id:"get-account-by-id"},"Get Account by ID"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param id<number> - Account ID\nexports.fd_banking:getAccountById(id)\n")),(0,r.kt)("h3",{id:"get-account-by-iban"},"Get Account by IBAN"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param iban<string> - Account IBAN\nexports.fd_banking:getAccountByIban(iban)\n")),(0,r.kt)("h3",{id:"get-business-account"},"Get Business account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param business<string> - Business\nexports.fd_banking:getBusinessAccount(business)\n")),(0,r.kt)("h3",{id:"issue-invoice"},"Issue invoice"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param source<number> - Source\n---@param playerId<number> - Player ID\n---@param amount<number> - Amount\n---@param reason<string> - Reason\n---@param isSociety<boolean> - Is society\nexports.fd_banking:issueInvoice(source, playerId, amount, reason, isSociety)\n")),(0,r.kt)("h3",{id:"pay-invoice"},"Pay invoice"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param source<number> - Source\n---@param id<number> - Invoice ID\n---@param(optional) forcePay<boolean> - Force pay\n---@param(optional) status<number> - Status\nexports.fd_banking:payInvoice(source, id, forcePay, status)\n")),(0,r.kt)("h3",{id:"lookup-invoice"},"Lookup invoice"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param source<number> - Source\n---@param invoiceId<number> - Invoice ID\nexports.fd_banking:lookupInvoice(id)\n")),(0,r.kt)("h3",{id:"cancel-invoice"},"Cancel invoice"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param source<number> - Source\n---@param invoiceId<number> - Invoice ID\nexports.fd_banking:cancelInvoice(source, invoiceId)\n")),(0,r.kt)("h3",{id:"get-account-owner"},"Get account owner"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param account<string> - Account\nexports.fd_banking:getAccountOwner(account)\n")),(0,r.kt)("h3",{id:"get-member"},"Get member"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param account_id<string> - Account ID\n---@param identifier<string> - Identifier (Citizen ID)\nexports.fd_banking:getMember(account_id, identifier)\n")),(0,r.kt)("h3",{id:"get-account-members"},"Get account members"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param account_id<string> - Account ID\nexports.fd_banking:getAccountMembers(account_id)\n")),(0,r.kt)("h3",{id:"do-transfer"},"Do transfer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param source<number> - Source\n---@param targetAccountId<number> - Target Account ID\n---@param playerId<string|nil> - Player ID\n---@param amount<number> - Amount\n---@param localAccountId<number|nil> - Local Account ID\n---@param reason<string> - Reason\n---@param transactionCallback<function|nil> - Transaction Callback\n---@param forcePay<boolean|nil> - Force Pay\n\nexports.fd_banking:doTransfer(source, targetAccountId, playerId, amount, localAccountId, reason, transactionCallback, forcePay)\n")),(0,r.kt)("h3",{id:"open-bank"},"Open bank"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"-- @param dontCheckDistance<boolean> - Don't check distance\nexports.fd_banking:openBank(dontCheckDistance)\n")),(0,r.kt)("h3",{id:"open-atm"},"Open atm"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"-- @param dontCheckDistance<boolean> - Don't check distance\nexports.fd_banking:openAtm()\n")),(0,r.kt)("h3",{id:"open-billing"},"Open billing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"exports.fd_banking:openBilling()\n")),(0,r.kt)("h2",{id:"qb-management-equivalent-exports"},"Qb-management equivalent exports"),(0,r.kt)("h3",{id:"get-society-account"},"Get Society Account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param society<string> - society identifier\nexports.fd_banking:GetAccount(society)\n")),(0,r.kt)("h3",{id:"get-gang-account"},"Get Gang Account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param gang<string> - gang identifier\nexports.fd_banking:GetGangAccount(gang)\n")),(0,r.kt)("h3",{id:"add-society-money"},"Add Society Money"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param society<string> - society identifier\n---@param amount<number> - amount\n---@param reason<string> - reason\nexports.fd_banking:AddMoney(society, amount, reason)\n")),(0,r.kt)("h3",{id:"add-gang-money"},"Add Gang Money"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param society<string> - society identifier\n---@param amount<number> - amount\n---@param reason<string> - reason\nexports.fd_banking:AddGangMoney(society, amount, reason)\n")),(0,r.kt)("h3",{id:"remove-society-money"},"Remove Society Money"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param society<string> - society identifier\n---@param amount<number> - amount\n---@param reason<string> - reason\nexports.fd_banking:RemoveMoney(society, amount, reason)\n")),(0,r.kt)("h3",{id:"remove-gang-money"},"Remove Gang Money"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"---@param society<string> - society identifier\n---@param amount<number> - amount\n---@param reason<string> - reason\nexports.fd_banking:RemoveGangMoney(society, amount, reason)\n")))}m.isMDXComponent=!0}}]);