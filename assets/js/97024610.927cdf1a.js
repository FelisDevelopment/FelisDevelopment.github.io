"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[782],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),p=a,f=d["".concat(s,".").concat(p)]||d[p]||m[p]||o;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:function(e,n,t){t.d(n,{Z:function(){return i}});var r=t(7294),a=t(4334),o={tabItem:"tabItem_Ymn6"};function i(e){let{children:n,hidden:t,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,i),hidden:t},n)}},4866:function(e,n,t){t.d(n,{Z:function(){return v}});var r=t(3117),a=t(7294),o=t(4334),i=t(2466),l=t(6550),s=t(1980),c=t(7392),u=t(12);function d(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}function m(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??d(t);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const r=(0,l.k6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s._X)(o),(0,a.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=m(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[s,c]=f({queryString:t,groupId:r}),[d,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,u.Nk)(t);return[r,(0,a.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:r}),g=(()=>{const e=s??d;return p({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),b(e)}),[c,b,o]),tabValues:o}}var g=t(2389),h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:n,block:t,selectedValue:l,selectValue:s,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),m=e=>{const n=e.currentTarget,t=u.indexOf(n),r=c[t].value;r!==l&&(d(n),s(r))},p=e=>{let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}n?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},n)},c.map((e=>{let{value:n,label:t,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>u.push(e),onKeyDown:p,onClick:m},i,{className:(0,o.Z)("tabs__item",h.tabItem,i?.className,{"tabs__item--active":l===n})}),t??n)})))}function _(e){let{lazy:n,children:t,selectedValue:r}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r}))))}function w(e){const n=b(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",h.tabList)},a.createElement(y,(0,r.Z)({},e,n)),a.createElement(_,(0,r.Z)({},e,n)))}function v(e){const n=(0,g.Z)();return a.createElement(w,(0,r.Z)({key:String(n)},e))}},3457:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var r=t(3117),a=(t(7294),t(3905)),o=t(4866),i=t(5162);const l={title:"Config"},s=void 0,c={unversionedId:"fd_storage/config",id:"fd_storage/config",title:"Config",description:"Config",source:"@site/docs/fd_storage/config.md",sourceDirName:"fd_storage",slug:"/fd_storage/config",permalink:"/docs/fd_storage/config",draft:!1,editUrl:"https://github.com/FelisDevelopment/FelisDevelopment.github.io/tree/main/docs/fd_storage/config.md",tags:[],version:"current",frontMatter:{title:"Config"},sidebar:"fd_storage",previous:{title:"Portable storage / containers",permalink:"/docs/category/portable-storage--containers"},next:{title:"Controls",permalink:"/docs/fd_storage/controls"}},u={},d=[{value:"Config",id:"config",level:2},{value:"New crate",id:"new-crate",level:2},{value:"fd_storage config",id:"fd_storage-config",level:3},{value:"Inventory item",id:"inventory-item",level:3}],m={toc:d},p="wrapper";function f(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"config"},"Config"),(0,a.kt)("p",null,"To find out more about configuration please check descriptions below"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'Config =  {\n    debug = true, -- Enables or Disables prints in server console\n    purge_expired_every = 1000 * 60 * 10, -- 10 minutes, defines intervals for expired containers checking and removing\n    save_storages_every = 1000 * 60 * 10, -- 10 minutes, defines intervals when on the ground inventories are saved\n    distance_between_containers = 5, -- defines distance between containers, so players wouldn\'t be able to place them next to each other\n    maximum_distance_for_placing = 50, -- defines maximum distance where place can place container from him self\n    hacking = {\n        icons = 3, -- how many icons appears in hacking\n        time = 5000 -- how much time user has to guess correct color\n    },\n    core = {\n        framework = \'qbcore\', -- available: qbcore, esx\n        resource = \'reign-core\' -- for qbcore usually: qb-core, for esx usually: es_extended\n    },\n    animations = { -- different animations for actions\n        destroy = {\n            dict = \'anim@amb@clubhouse@tutorial@bkr_tut_ig3@\',\n            name = \'machinic_loop_mechandplayer\',\n        },\n        repair = {\n            dict = \'anim@amb@clubhouse@tutorial@bkr_tut_ig3@\',\n            name = \'machinic_loop_mechandplayer\',\n        },\n        create = {\n            dict = "random@domestic",\n            name = "pickup_low"\n        },\n        lock = {\n            dict = \'anim@amb@clubhouse@tutorial@bkr_tut_ig3@\',\n            name = \'machinic_loop_mechandplayer\',\n        },\n        unlock = {\n            dict = \'anim@amb@clubhouse@tutorial@bkr_tut_ig3@\',\n            name = \'machinic_loop_mechandplayer\',\n        }\n    },\n    crates = { -- defines all containers which are available\n        smallcrate = {\n            lifetime = 14 * 86400, -- 7 days, defines container age after which it will be despawned and destroyed (seconds)\n            model = "gr_prop_gr_rsply_crate03a", -- container model\n            can_pickup = true, -- can container be picked up\n            destroy_time = 30000, -- how many time it takes to destroy container\n            lock_time = 30000, -- how many time it takes to put a lock on container\n            break_time = 30000, -- how many time it takes for hack to appear\n            repair_time = 30000, -- how many time it takes to repair / extend lifetime\n            distance = 2, -- target distance\n            repair_kits_needed = 1, -- how many repair kits needed to repair / extend lifetime\n            size = {\n                slots = 15, -- how many slots are available for this container\n                weight = 50000 -- maximum weight available for this container\n            }\n        },\n        mediumcrate = {\n            lifetime = 14 * 86400, -- 14 days\n            model = "prop_box_wood07a",\n            destroy_time = 60000,\n            lock_time = 30000,\n            break_time = 30000,\n            repair_time = 30000,\n            distance = 2,\n            repair_kits_needed = 2,\n            size = {\n                slots = 30,\n                weight = 100000\n            }\n        },\n        bigcrate = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "prop_box_wood04a",\n            destroy_time = 90000,\n            lock_time = 30000,\n            break_time = 30000,\n            repair_time = 30000,\n            distance = 2,\n            repair_kits_needed = 3,\n            size = {\n                slots = 50,\n                weight = 200000\n            }\n        },\n        smallcontainer = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "prop_container_05mb",\n            destroy_time = 120000,\n            lock_time = 30000,\n            break_time = 30000,\n            repair_time = 30000,\n            distance = 3,\n            repair_kits_needed = 4,\n            size = {\n                slots = 100,\n                weight = 500000\n            }\n        },\n        mediumcontainer = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "prop_container_03mb",\n            destroy_time = 120000,\n            lock_time = 30000,\n            break_time = 30000,\n            repair_time = 30000,\n            distance = 5,\n            repair_kits_needed = 5,\n            size = {\n                slots = 200,\n                weight = 1000000\n            }\n        },\n        bigcontainer = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "prop_container_01mb",\n            destroy_time = 120000,\n            lock_time = 30000,\n            break_time = 30000,\n            repair_time = 30000,\n            distance = 7,\n            repair_kits_needed = 6,\n            size = {\n                slots = 400,\n                weight = 1500000\n            }\n        },\n        smalltrapcrate = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "gr_prop_gr_rsply_crate03a",\n            destroy_time = 30000,\n            distance = 3,\n            trap = true\n        },\n        trapcrate = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "prop_box_wood07a",\n            destroy_time = 30000,\n            distance = 3,\n            trap = true\n        },\n        bigtrapcrate = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "prop_box_wood04a",\n            destroy_time = 30000,\n            distance = 3,\n            trap = true\n        },\n        portablefridge = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "v_res_tre_fridge",\n            destroy_time = 30000,\n            distance = 3,\n            offset = 0.0,\n            size = {\n                slots = 20,\n                weight = 70000\n            }\n        }\n    }\n}\n\n')),(0,a.kt)("h2",{id:"new-crate"},"New crate"),(0,a.kt)("p",null,"Since script is dynamic, you can add new containers at any time."),(0,a.kt)("h3",{id:"fd_storage-config"},"fd_storage config"),(0,a.kt)("p",null,"First of all, add container to config ",(0,a.kt)("inlineCode",{parentName:"p"},"shared/config.lua"),", please refer to example down below. It will be named ",(0,a.kt)("inlineCode",{parentName:"p"},"newawesomecontainer")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'Config =  {\n    ...,\n    crates = {\n        ...,\n        newawesomecontainer = {\n            lifetime = 30 * 86400, -- 30 days\n            model = "v_res_tre_fridge",\n            destroy_time = 30000,\n            distance = 3,\n            offset = 0.0,\n            size = {\n                slots = 20,\n                weight = 70000\n            }\n        }\n    }\n}\n')),(0,a.kt)("h3",{id:"inventory-item"},"Inventory item"),(0,a.kt)("p",null,"After adding container to config, you'll need to add item to your inventory."),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"qbcore",label:"QBCore",default:!0,mdxType:"TabItem"},(0,a.kt)("p",null,"Add item to ",(0,a.kt)("inlineCode",{parentName:"p"},"shared/items.lua")," or where your ",(0,a.kt)("inlineCode",{parentName:"p"},"QBShared.Items")," is."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'    ["newawesomecontainer"] = {\n        ["name"] = "newawesomecontainer",\n        ["label"] = "New Awesome Container",\n        ["weight"] = 0,\n        ["type"] = "item",\n        ["image"] = "newawesomecontainer.png",\n        ["unique"] = true,\n        ["useable"] = true,\n        ["shouldClose"] = true,\n        ["combinable"] = nil,\n        ["description"] = "Is there something in it? It\'s new."\n    },\n'))),(0,a.kt)(i.Z,{value:"esx",label:"ESX",default:!0,mdxType:"TabItem"},(0,a.kt)("p",null,"Add item to ",(0,a.kt)("inlineCode",{parentName:"p"},"ox_inventory/data/items.lua"),";"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"    ['newawesomecontainer'] = {\n        label = 'New Awesome Container',\n        weight = 1,\n        stack = false,\n        close = true,\n        description = 'Is there something in it?',\n        client = {\n            usetime = 2500,\n            export = 'fd_storage.newawesomecontainer'\n        },\n        server = {\n            export = 'fd_storage.newawesomecontainer'\n        }\n    },\n")))))}f.isMDXComponent=!0}}]);